// Code generated by protoc-gen-go. DO NOT EDIT.
// source: content.proto

/*
Package content is a generated protocol buffer package.

It is generated from these files:
	content.proto

It has these top-level messages:
	Content
	PushResponse
	ContentRequest
*/
package content

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Content struct {
	TargetURL      string `protobuf:"bytes,1,opt,name=targetURL" json:"targetURL,omitempty"`
	ReloadSeconds  int32  `protobuf:"varint,2,opt,name=reloadSeconds" json:"reloadSeconds,omitempty"`
	ScrollIntoView string `protobuf:"bytes,3,opt,name=scrollIntoView" json:"scrollIntoView,omitempty"`
}

func (m *Content) Reset()                    { *m = Content{} }
func (m *Content) String() string            { return proto.CompactTextString(m) }
func (*Content) ProtoMessage()               {}
func (*Content) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Content) GetTargetURL() string {
	if m != nil {
		return m.TargetURL
	}
	return ""
}

func (m *Content) GetReloadSeconds() int32 {
	if m != nil {
		return m.ReloadSeconds
	}
	return 0
}

func (m *Content) GetScrollIntoView() string {
	if m != nil {
		return m.ScrollIntoView
	}
	return ""
}

type PushResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *PushResponse) Reset()                    { *m = PushResponse{} }
func (m *PushResponse) String() string            { return proto.CompactTextString(m) }
func (*PushResponse) ProtoMessage()               {}
func (*PushResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PushResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ContentRequest struct {
}

func (m *ContentRequest) Reset()                    { *m = ContentRequest{} }
func (m *ContentRequest) String() string            { return proto.CompactTextString(m) }
func (*ContentRequest) ProtoMessage()               {}
func (*ContentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*Content)(nil), "content.Content")
	proto.RegisterType((*PushResponse)(nil), "content.PushResponse")
	proto.RegisterType((*ContentRequest)(nil), "content.ContentRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ContentPush service

type ContentPushClient interface {
	PushContent(ctx context.Context, in *Content, opts ...grpc.CallOption) (*PushResponse, error)
	GetContent(ctx context.Context, in *ContentRequest, opts ...grpc.CallOption) (*Content, error)
}

type contentPushClient struct {
	cc *grpc.ClientConn
}

func NewContentPushClient(cc *grpc.ClientConn) ContentPushClient {
	return &contentPushClient{cc}
}

func (c *contentPushClient) PushContent(ctx context.Context, in *Content, opts ...grpc.CallOption) (*PushResponse, error) {
	out := new(PushResponse)
	err := grpc.Invoke(ctx, "/content.ContentPush/PushContent", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contentPushClient) GetContent(ctx context.Context, in *ContentRequest, opts ...grpc.CallOption) (*Content, error) {
	out := new(Content)
	err := grpc.Invoke(ctx, "/content.ContentPush/GetContent", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ContentPush service

type ContentPushServer interface {
	PushContent(context.Context, *Content) (*PushResponse, error)
	GetContent(context.Context, *ContentRequest) (*Content, error)
}

func RegisterContentPushServer(s *grpc.Server, srv ContentPushServer) {
	s.RegisterService(&_ContentPush_serviceDesc, srv)
}

func _ContentPush_PushContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Content)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentPushServer).PushContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/content.ContentPush/PushContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentPushServer).PushContent(ctx, req.(*Content))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContentPush_GetContent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContentPushServer).GetContent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/content.ContentPush/GetContent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContentPushServer).GetContent(ctx, req.(*ContentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContentPush_serviceDesc = grpc.ServiceDesc{
	ServiceName: "content.ContentPush",
	HandlerType: (*ContentPushServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PushContent",
			Handler:    _ContentPush_PushContent_Handler,
		},
		{
			MethodName: "GetContent",
			Handler:    _ContentPush_GetContent_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "content.proto",
}

func init() { proto.RegisterFile("content.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xce, 0xcf, 0x2b,
	0x49, 0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x4a, 0xb9,
	0xd8, 0x9d, 0x21, 0x4c, 0x21, 0x19, 0x2e, 0xce, 0x92, 0xc4, 0xa2, 0xf4, 0xd4, 0x92, 0xd0, 0x20,
	0x1f, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x84, 0x80, 0x90, 0x0a, 0x17, 0x6f, 0x51, 0x6a,
	0x4e, 0x7e, 0x62, 0x4a, 0x70, 0x6a, 0x72, 0x7e, 0x5e, 0x4a, 0xb1, 0x04, 0x93, 0x02, 0xa3, 0x06,
	0x6b, 0x10, 0xaa, 0xa0, 0x90, 0x1a, 0x17, 0x5f, 0x71, 0x72, 0x51, 0x7e, 0x4e, 0x8e, 0x67, 0x5e,
	0x49, 0x7e, 0x58, 0x66, 0x6a, 0xb9, 0x04, 0x33, 0xd8, 0x20, 0x34, 0x51, 0x25, 0x0d, 0x2e, 0x9e,
	0x80, 0xd2, 0xe2, 0x8c, 0xa0, 0xd4, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x09, 0x2e, 0xf6,
	0xe2, 0xd2, 0xe4, 0xe4, 0xd4, 0xe2, 0x62, 0xb0, 0xcd, 0x1c, 0x41, 0x30, 0xae, 0x92, 0x00, 0x17,
	0x1f, 0xd4, 0x81, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x46, 0x4d, 0x8c, 0x5c, 0xdc, 0x50,
	0x21, 0x90, 0x19, 0x42, 0x16, 0x5c, 0xdc, 0x20, 0x1a, 0xe6, 0x0d, 0x01, 0x3d, 0x98, 0x57, 0xa1,
	0x22, 0x52, 0xa2, 0x70, 0x11, 0x64, 0x3b, 0x95, 0x18, 0x84, 0x2c, 0xb9, 0xb8, 0xdc, 0x53, 0x4b,
	0x60, 0x1a, 0xc5, 0xd1, 0x35, 0x42, 0x2d, 0x94, 0xc2, 0x30, 0x51, 0x89, 0x21, 0x89, 0x0d, 0x1c,
	0x8e, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfd, 0x3c, 0xac, 0x7a, 0x58, 0x01, 0x00, 0x00,
}
